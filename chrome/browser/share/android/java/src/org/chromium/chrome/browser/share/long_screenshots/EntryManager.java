// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package org.chromium.chrome.browser.share.long_screenshots;

import android.content.Context;
import android.graphics.Bitmap;

import org.chromium.base.Callback;
import org.chromium.chrome.browser.tab.Tab;
import org.chromium.content_public.browser.RenderCoordinates;
import org.chromium.ui.display.DisplayAndroid;

import java.util.ArrayList;
import java.util.List;

/**
 * Entry manager responsible for managing all the of the {@LongScreenshotEntry}. This should be used
 * to generate and retreive the needed bitmaps. The first bitmap can be generated by calling
 * {@link generateInitialBitmapBlocking}.
 */
public class EntryManager {
    private Context mContext;
    private Tab mTab;

    private List<LongScreenshotsEntry> mEntries;
    private int mDisplayHeightPx;

    /**
     * @param context An instance of current Android {@link Context}.
     * @param tab Tab to generate the bitmap for.
     */
    public EntryManager(Context context, Tab tab) {
        mContext = context;
        mTab = tab;
        mEntries = new ArrayList<LongScreenshotsEntry>();
        calculateClipHeight();
    }

    /**
     * Generates the first bitmap of the page that is the height of the phone display. Calls the
     * provided callback with the generated bitmap.
     *
     * @param onGenerated Callback to pass the generated bitmap.
     */
    public void generateInitialBitmap(Callback<Bitmap> onGenerated) {
        LongScreenshotsEntry entry =
                new LongScreenshotsEntry(mContext, mTab, new LongScreenshotsEntry.Listener() {
                    @Override
                    public void onCompositorError(int status) {
                        // TODO(tgupta): Auto-generated method stub
                    }

                    @Override
                    public void onCaptureError() {
                        // TODO(tgupta): Auto-generated method stub
                    }

                    @Override
                    public void onBitmapGenerated(LongScreenshotsEntry entry) {
                        mEntries.add(entry);
                        onGenerated.onResult(entry.getBitmap());
                    }
                });
        RenderCoordinates coords = RenderCoordinates.fromWebContents(mTab.getWebContents());
        int startY = coords.getScrollYPixInt() / coords.getPageScaleFactorInt();
        entry.setClipBounds(startY, mDisplayHeightPx);
        entry.captureScreenshot();
    }

    /**
     * Calculates the height of the phone used to determine the height of the bitmaps.
     */
    private void calculateClipHeight() {
        DisplayAndroid displayAndroid = DisplayAndroid.getNonMultiDisplay(mContext);
        mDisplayHeightPx = displayAndroid.getDisplayHeight();
    }
}
